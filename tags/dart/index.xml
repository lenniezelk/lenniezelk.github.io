<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>dart on Leonard Kioi</title><link>http://example.org/tags/dart/</link><description>Recent content in dart on Leonard Kioi</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 23 Mar 2020 12:20:58 +0300</lastBuildDate><atom:link href="http://example.org/tags/dart/index.xml" rel="self" type="application/rss+xml"/><item><title>Named Parameters in Dart, Swift and Python</title><link>http://example.org/posts/named-parameters-in-dart-swift-and-python/</link><pubDate>Mon, 23 Mar 2020 12:20:58 +0300</pubDate><guid>http://example.org/posts/named-parameters-in-dart-swift-and-python/</guid><description>In software development we optimize for readability since code is read more than its written. Named parameters are one way to improve code readability. Lets say we have a function that calculates the distance between two points. I takes two point Point class instances representing the start and end positions. When calling the functions, using positional arguments its not very clear what is being referred to.
In Python:
In Dart:</description></item><item><title>Running flutter app on Genymotion</title><link>http://example.org/posts/running-flutter-app-on-genymotion/</link><pubDate>Mon, 15 Jul 2019 11:41:24 +0300</pubDate><guid>http://example.org/posts/running-flutter-app-on-genymotion/</guid><description>To run flutter apps for android development you have the option of running the app on android studio AVDs or genymotion. I prefer genymotion since I find more lightweight and I can run vagrant boxes usually for the backend of the application. This is not possible with AVDs. Flutter fails to recognize the devices created using genymotion. After searching around the internet I could not find a solution so I&amp;rsquo;m going to post what worked for me.</description></item><item><title>Flutter loading screen with future builder</title><link>http://example.org/posts/flutter-loading-screen-with-future-builder/</link><pubDate>Thu, 11 Jul 2019 10:43:59 +0300</pubDate><guid>http://example.org/posts/flutter-loading-screen-with-future-builder/</guid><description>When developing UIs you need to give the user some feedback on a long running process. A loading widget is normally the go to solution. In React you would have a boolean property in the components state. If for example you are fetching some data from the internet, you would set the boolean to true. In the component&amp;rsquo;s render method you would display a loading widget based on the value of that boolean property.</description></item><item><title>Setting up Dart for local development</title><link>http://example.org/posts/setting-up-dart-for-local-development/</link><pubDate>Tue, 28 May 2019 11:23:34 +0300</pubDate><guid>http://example.org/posts/setting-up-dart-for-local-development/</guid><description>I&amp;rsquo;ve been learning Flutter for mobile development lately. I like the journey so far and I&amp;rsquo;m going to be posting stuff I learn along the way. First i&amp;rsquo;ll show how to setup Dart for local development. I use asdf for managing different versions of language runtimes on my local machine. I found out about it when trying to setup different Python versions. My dev machine comes with Python 3.7 but at work we use Python 3.</description></item></channel></rss>